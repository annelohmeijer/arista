"""Update table

Revision ID: 40618842fa23
Revises: 9235dd11c33c
Create Date: 2024-07-29 08:44:56.033080

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '40618842fa23'
down_revision: Union[str, None] = '9235dd11c33c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('funding_rates',
    sa.Column('exchange', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('symbol', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('o', sa.Float(), nullable=False),
    sa.Column('h', sa.Float(), nullable=False),
    sa.Column('l', sa.Float(), nullable=False),
    sa.Column('c', sa.Float(), nullable=False),
    sa.Column('t', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('fundingrate')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('fundingrate',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('exchange', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('symbol', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('o', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('h', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('l', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('c', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('t', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='fundingrate_pkey')
    )
    op.drop_table('funding_rates')
    # ### end Alembic commands ###
