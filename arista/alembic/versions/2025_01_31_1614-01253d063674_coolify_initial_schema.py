"""Coolify initial schema

Revision ID: 01253d063674
Revises: dfac5065a4b4
Create Date: 2025-01-31 16:14:43.739677

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "01253d063674"
down_revision: Union[str, None] = "dfac5065a4b4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "coinmarketcap",
        sa.Column("cmc_rank", sa.Integer(), nullable=False),
        sa.Column("cmc_id", sa.Integer(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("symbol", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("market_cap_by_total_supply", sa.Float(), nullable=False),
        sa.Column("circulating_supply", sa.Float(), nullable=False),
        sa.Column("total_supply", sa.Float(), nullable=False),
        sa.Column("max_supply", sa.Float(), nullable=True),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("volume_24h", sa.Float(), nullable=False),
        sa.Column("volume_change_24h", sa.Float(), nullable=True),
        sa.Column("market_cap", sa.Float(), nullable=False),
        sa.Column("fully_diluted_market_cap", sa.Float(), nullable=True),
        sa.Column("utc", sa.DateTime(), nullable=False),
        sa.Column("iso_date", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "deribit_futures",
        sa.Column("asset", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("instrument", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column(
            "future_reference", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("expiration", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("price", sa.Float(), nullable=False),
        sa.Column("unix_timestamp", sa.Integer(), nullable=False),
        sa.Column("datetime_", sa.DateTime(), nullable=False),
        sa.Column("size", sa.Float(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "funding_rate",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("symbol", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("o", sa.Float(), nullable=False),
        sa.Column("h", sa.Float(), nullable=False),
        sa.Column("l", sa.Float(), nullable=False),
        sa.Column("c", sa.Float(), nullable=False),
        sa.Column("t", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "open_interest",
        sa.Column("symbol", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("aggregated_open_interest", sa.Float(), nullable=False),
        sa.Column("unix_timestamp", sa.Integer(), nullable=False),
        sa.Column("utc", sa.DateTime(), nullable=False),
        sa.Column("source", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "symbol", "unix_timestamp", "utc", name="oi_symbol_time_unique_constraint"
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("open_interest")
    op.drop_table("funding_rate")
    op.drop_table("deribit_futures")
    op.drop_table("coinmarketcap")
    # ### end Alembic commands ###
